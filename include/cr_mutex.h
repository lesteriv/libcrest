/**********************************************************************************************/
/* cr_mutex.h			  		                                                   			  */
/*                                                                       					  */
/* Igor Nikitin, 2012																		  */
/* MIT license			                                                  					  */
/**********************************************************************************************/

#pragma once

// CREST
#include "internal/cr_connection_internal.h"


/**********************************************************************************************/
class cr_mutex
{
	public://////////////////////////////////////////////////////////////////////////
		
							cr_mutex( void );
							~cr_mutex( void );

	public://////////////////////////////////////////////////////////////////////////
		
// This class API:		
		
	// ---------------------
	// Methods
		
		void				lock( void );
		void				unlock( void );
		
		
	protected://////////////////////////////////////////////////////////////////////////
		
// References		
		
		void*				mutex_;
};


/**********************************************************************************************/
struct cr_lock_guard
{
	cr_lock_guard( cr_mutex& mtx ) : mtx_( mtx ) { mtx.lock(); }
	~cr_lock_guard( void ) { mtx_.unlock(); }
	
	cr_mutex& mtx_;
};
