/**********************************************************************************************/
/* file_server_stl.cpp							                                			  */
/*                                                                       					  */
/* Igor Nikitin, 2012																		  */
/* MIT license			                                                  					  */
/**********************************************************************************************/

// STD
#include <iostream>
#include <string>

// CREST
#include "../include/crest.h"

/**********************************************************************************************/
using namespace std;


//////////////////////////////////////////////////////////////////////////
// constants
//////////////////////////////////////////////////////////////////////////


/**********************************************************************************************/
static const string	g_root = "/var/log";

/**********************************************************************************************/
static const string g_index	=
	"<html>"
	"<a href=\"apt/history.log\">apt/history.log</a><br>"
	"<a href=\"Xorg.0.log\">Xorg.0.log</a><br>"
	"<a href=\"auth.log\">auth.log</a><br>"
	"<a href=\"dmesg\">dmesg</a><br>"
	"<a href=\"kern.log\">kern.log</a><br>"
	"<a href=\"syslog\">syslog</a>"
	"</html>";


//////////////////////////////////////////////////////////////////////////
// handlers
//////////////////////////////////////////////////////////////////////////


/**********************************************************************************************/
GET( * )( cr_connection& conn )
{
	conn.get_url()[ 1 ] ?
		conn.send_file( g_root + conn.get_url(), "text/plain" ) :
		conn.respond( CR_HTTP_OK, g_index );
}


//////////////////////////////////////////////////////////////////////////
// entry point
//////////////////////////////////////////////////////////////////////////


/**********************************************************************************************/
int main( void )
{
	cr_options opts;
	opts.thread_count = 1;
	
	if( !cr_start( opts ) )
		cout << cr_error_string() << endl;
}
