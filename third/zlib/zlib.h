/**********************************************************************************************/
/* zlib.h			  		                                                   				  */
/*                                                                       					  */
/* (C) 1995-2012 Jean-loup Gailly and Mark Adler											  */
/* ZLIB license   																		  	  */
/**********************************************************************************************/

#pragma once

// STD
#include <stddef.h>

/**********************************************************************************************/
typedef unsigned char  Byte;

/**********************************************************************************************/
struct internal_state;

/**********************************************************************************************/
struct z_stream
{
    unsigned long   adler;
    unsigned int    avail_in;
    unsigned int	avail_out;
    const Byte*		next_in;
    Byte*			next_out;
    internal_state*	state;
};

/**********************************************************************************************/
#define MAX_MATCH	258
#define MIN_MATCH	3


/**********************************************************************************************/
extern void deflate( z_stream* strm );

/**********************************************************************************************/
static inline size_t compressBound( size_t sourceLen )
{
    return sourceLen + (sourceLen >> 12) + (sourceLen >> 14) + (sourceLen >> 25) + 13;
}
